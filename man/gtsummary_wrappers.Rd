% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_wrappers.R
\name{add_mr}
\alias{add_mr}
\alias{add_ar}
\alias{add_cfr}
\alias{gt_remove_stat}
\alias{add_cs}
\alias{add_gt_cfr_stat_label}
\alias{add_gt_cfr_stat_level}
\alias{add_gt_attack_rate_stat_label}
\alias{add_gt_attack_rate_level}
\alias{add_gt_mortality_rate_level}
\title{An attack rate wrapper function (using gtsummary and epikit packages)that takes
a gtsummary object and returns a gtsummary object with attack rate (per given
multiple) with 95\% confidence interval}
\usage{
add_mr(
  gts_object,
  deaths_var,
  population = NULL,
  multiplier = 10^4,
  drop_tblsummary_stat = FALSE
)

add_ar(
  gts_object,
  case_var,
  population = NULL,
  multiplier = 10^4,
  drop_tblsummary_stat = FALSE
)

add_cfr(gts_object, deaths_var)

gt_remove_stat(gts_object, col_name = "stat_0")

add_cs(
  data,
  exposure,
  outcome,
  var = NULL,
  show_overall = TRUE,
  exposure_label = NULL,
  outcome_label = NULL,
  var_label = NULL,
  two_by_two = FALSE
)

add_gt_cfr_stat_label(data, variable, by, deaths_var, ...)

add_gt_cfr_stat_level(data, variable, by, deaths_var, ...)

add_gt_attack_rate_stat_label(
  data,
  variable,
  by = NULL,
  case_var,
  population = population,
  multiplier = 10^4,
  drop_total = TRUE,
  drop_cases = TRUE,
  ...
)

add_gt_attack_rate_level(
  data,
  variable,
  by = NULL,
  case_var,
  population = NULL,
  multiplier = 10^4,
  drop_total = TRUE,
  drop_cases = TRUE,
  ...
)

add_gt_mortality_rate_level(
  data,
  variable,
  by = NULL,
  deaths_var,
  population = NULL,
  multiplier = 10^4,
  drop_total = TRUE,
  drop_deaths = TRUE,
  ...
)
}
\arguments{
\item{gts_object}{A data frame, passed by the gtsummary::add_stat function}

\item{deaths_var}{the name of a logical column in the data that indicates that the case died,
is passed as the first argument to \code{epikit::case_fatality_rate_df}}

\item{multiplier}{The base by which to multiply the output:}

\item{col_name}{the column name from the gtsummary object's table_body to remove}

\item{data}{A data frame, passed by the gtsummary::add_stat function.}

\item{exposure}{Name of the exposure variable, which should be a factor ordered
by case and control - in that order (eg if case = 1, control = 0, factor levels
should be ordered as 1,0. The code labels the Cases as the first pair of
gstummary stat columns and the second pair as Controls.}

\item{outcome}{Name of the outcome variable}

\item{show_overall}{Logical argument to include overall column in gtsummary output;
defaults to TRUE}

\item{exposure_label}{exposure label for the gtsummary output, if none passed,
exposure variable name is used instead}

\item{outcome_label}{outcome label for the gtsummary output, if none passed,
outcome variable name is used instead}

\item{variable}{Name of a variable as the outcome of interest, passed by the
gtsummary::add_stat function (e.g. illness)}

\item{by}{Name of a variable for stratifying, passed by the gtsummary::add_stat
function (e.g. illness).}

\item{...}{additional params that may be passed from gtsummary functions.}

\item{drop_total}{whether or not to include the population column; default TRUE}
}
\value{
a single-row gtsummary object with attack rate results cases,
population, attack rate, and 95\% confidence interval.

a single-row gtsummary object with attack rate results cases,
population, attack rate, and 95\% confidence interval.

a single row gtsummary object with case fatality rate results for
deaths, cases, cfr, and 95\% confidence interval.

a gtsummary object without the named column

a single row gtsummary object with case fatality rate results for
deaths, cases, cfr, and 95\% confidence interval.

a single row or multiple row gtsummary object with with case fatality
rate results for deaths, cases, cfr, and 95\% confidence interval.

a single row gtsummary object with with attack rate results with
cases, attack rate, and 95\% confidence interval.

a single-row gtsummary object with attack rate results cases,
population, attack rate, and 95\% confidence interval.

a single-row gtsummary object with attack rate results cases,
population, attack rate, and 95\% confidence interval.
}
\description{
An attack rate wrapper function (using gtsummary and epikit packages)that takes
a gtsummary object and returns a gtsummary object with attack rate (per given
multiple) with 95\% confidence interval

An attack rate wrapper function (using gtsummary and epikit packages)that takes
a gtsummary object and returns a gtsummary object withattack rate (per given
multiple) with 95\% confidence interval

An case fatality rate wrapper function (using gtsummary and epikit packages)
that takes a gtsummary object and returns a gtsummary object with number
of deaths, case fatality rate, and 95\% confidence interval.

A gtsummary wrapper function that takes a gtsummary object and removes a
column from the table body by column name

A gtsummary wrapper function that takes a data frame and adds cross tabs
by exposure and outcome

A case fatality rate wrapper function to be passed to the gtsummary::add_stat
function, which returns a data frame with a single row to be used with
dichotomous data or overall data.Calls epikit::case_fatality_rate_df.

A case fatality rate wrapper function to be passed to the gtsummary::add_stat function,
which returns a data frame with multiple rows to be used when location is set
to "level" for multi-level categorical data. Calls epikit::case_fatality_rate_df.

An attack rate wrapper function to be passed to the gtsummary::add_stat
function, which returns a data frame with a single row to be used with
dichotomous data or overall data. Calls epikit::attack_rate.

An attack rate wrapper function to be passed to the gtsummary::add_stat function,
which returns a data frame with multiple rows to be used when location is set
to "level" for multi-level categorical data. Calls epikit::attack_rate.

A mortality rate wrapper function to be passed to the gtsummary::add_stat function,
which returns a data frame with multiple rows to be used when location is set
to "level" for multi-level categorical data. Calls epikit::attack_rate.
}
